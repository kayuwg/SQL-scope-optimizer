execute id 1 SELECT t1.contest_id, round(CAST(div((count(t2.user_id) * 100), count(t1.user_id)) AS numeric), 2) AS percentage FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
execute id 2 SELECT count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
execute id 3 SELECT count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
execute id 2 SELECT count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id
execute id 2 SELECT count(t2.user_id) AS agg FROM register AS t2 GROUP BY t2.contest_id
execute id 3 SELECT count(t2.user_id) AS agg FROM register AS t2 GROUP BY t2.contest_id
execute id 2 SELECT count(us.user_id) AS agg FROM (SELECT DISTINCT users.user_id FROM users) AS us
execute id 2 SELECT count(DISTINCT users.user_id) AS agg FROM users
instantiating id 1
instantiating id 2
instantiating id 3
1
SELECT t1.contest_id, round(CAST(div((count(t2.user_id) * 100), count(t1.user_id)) AS numeric), 2) AS percentage FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
children (0): [2, 3] free: False links: {'%dummy_origin%1': <ColumnRef fields=(<String val='t1'>, <String val='contest_id'>)>} value_map: None
2
SELECT count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
children (None): [] free: False links: {'%dummy_origin%2': <ColumnRef fields=(<String val='t1'>, <String val='contest_id'>)>} value_map: None
SELECT count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id
children (None): [] free: False links: {'%dummy_origin%2': <ColumnRef fields=(<String val='co'>, <String val='contest_id'>)>} value_map: None
SELECT count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
children (None): [] free: False links: {'%dummy_origin%2': <ColumnRef fields=(<String val='t1'>, <String val='contest_id'>)>} value_map: None
SELECT count(t2.user_id) AS agg FROM register AS t2 GROUP BY t2.contest_id
children (None): [] free: False links: {'t1.contest_id': <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>} value_map: {('t2', 'user_id'): <ColumnRef fields=(<String val='t2'>, <String val='user_id'>)>, ('t2', 'contest_id'): <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>}
SELECT count(us.user_id) AS agg FROM (SELECT DISTINCT users.user_id FROM users) AS us
children (None): [] free: True links: None value_map: None
SELECT count(us.user_id) AS agg FROM (SELECT DISTINCT users.user_id FROM users) AS us
children (None): [] free: True links: None value_map: None
SELECT count(t2.user_id) AS agg FROM register AS t2 GROUP BY t2.contest_id
children (None): [] free: False links: {'t1.contest_id': <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>} value_map: {('t2', 'user_id'): <ColumnRef fields=(<String val='t2'>, <String val='user_id'>)>, ('t2', 'contest_id'): <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>}
SELECT count(DISTINCT users.user_id) AS agg FROM users
children (None): [] free: True links: None value_map: None
SELECT count(DISTINCT users.user_id) AS agg FROM users
children (None): [] free: True links: None value_map: None
3
SELECT count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
children (None): [] free: False links: {'%dummy_origin%3': <ColumnRef fields=(<String val='t1'>, <String val='contest_id'>)>} value_map: None
SELECT count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
children (None): [] free: False links: {'%dummy_origin%3': <ColumnRef fields=(<String val='t1'>, <String val='contest_id'>)>} value_map: None
SELECT count(t2.user_id) AS agg FROM register AS t2 GROUP BY t2.contest_id
children (None): [] free: False links: {'t1.contest_id': <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>} value_map: {('t2', 'user_id'): <ColumnRef fields=(<String val='t2'>, <String val='user_id'>)>, ('t2', 'contest_id'): <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>}
SELECT count(t2.user_id) AS agg FROM register AS t2 GROUP BY t2.contest_id
children (None): [] free: False links: {'t1.contest_id': <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>} value_map: {('t2', 'user_id'): <ColumnRef fields=(<String val='t2'>, <String val='user_id'>)>, ('t2', 'contest_id'): <ColumnRef fields=(<String val='t2'>, <String val='contest_id'>)>}
instantiated results:
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT co.contest_id AS key1, count(us.user_id) AS agg FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us GROUP BY co.contest_id) AS b1t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t1.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 CROSS JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 ON t1.contest_id = b1t1.key1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT b1t1.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON b1t1.key1 = b1t2.key1 GROUP BY b1t1.key1 ORDER BY percentage DESC, b1t1.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 CROSS JOIN (SELECT t1.contest_id AS key1, count(t2.user_id) AS agg FROM (SELECT co.contest_id AS contest_id, us.user_id AS user_id FROM (SELECT DISTINCT register.contest_id FROM register) AS co CROSS JOIN (SELECT DISTINCT users.user_id FROM users) AS us) AS t1 LEFT JOIN register AS t2 ON (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) WHERE (t1.contest_id = t2.contest_id) AND (t1.user_id = t2.user_id) GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC) AS b1t2 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT b1t2.key1 AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 GROUP BY b1t2.key1 ORDER BY percentage DESC, b1t2.key1 ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((b1t2.agg * 100), b1t1.agg) AS numeric), 2) AS percentage FROM t1 AS t1 INNER JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
SELECT t1.contest_id AS contest_id, round(CAST(div((COALESCE(b1t2.agg, 0) * 100), COALESCE(b1t1.agg, 0)) AS numeric), 2) AS percentage FROM t1 AS t1 LEFT JOIN (SELECT t2.contest_id AS key1, count(t2.user_id) AS agg, t2.user_id AS value1, t2.contest_id AS value2 FROM register AS t2 GROUP BY t2.contest_id) AS b1t2 ON t1.contest_id = b1t2.key1 GROUP BY t1.contest_id ORDER BY percentage DESC, t1.contest_id ASC
